# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

# Triangle    Tn=n(n+1)/2   1, 3, 6, 10, 15, ...
# Pentagonal    Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
# Hexagonal   Hn=n(2n−1)    1, 6, 15, 28, 45, ...
# It can be verified that T285 = P165 = H143 = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.
# Time to complete: 1 hour

def triangle(num)
  num * (num + 1) / 2
end

def quadatric_for_x(a:, b:, c:)
  [
    (-1 * b + Math.sqrt(b ** 2 - 4 * a * c)) / (2 * a),
    (-1 * b - Math.sqrt(b ** 2 - 4 * a * c)) / (2 * a),
  ]
end

def pentagonal?(num)
  # num = x(3x−1)/2
  # 0 = 3x ** 2 - x - 2 * num
  quadatric_for_x(a: 3, b: -1, c: -2 * num).any? do |f|
    f.truncate == f && f > 0
  end
end

def hexagonal?(num)
  # num = n(2x−1)
  # 0 = 2x ** 2 - x - num
  quadatric_for_x(a: 2, b: -1, c: -1 * num).any? do |f|
    f.truncate == f && f > 0
  end
end

start = 285
found = nil

counter = start + 1
loop do
  break unless found.nil?

  tri = triangle(counter)
  if pentagonal?(tri) && hexagonal?(tri)
    found = tri
  end

  counter += 1
end

p found
